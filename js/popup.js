(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.pv_popup = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.12.3
(function() {
  var log_p;

  log_p = function(text) {
    return console.log(module.exports.prefix + text);
  };

  module.exports = {
    prefix: 'parse_v-crx: ',
    d: function(text) {
      return log_p('DEBUG: ' + text);
    },
    c: function(text) {
      return log_p('content script: ' + text);
    }
  };

}).call(this);



},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.12.3
(function() {
  var msg_type_check_support, msg_type_flush_done, msg_type_found, msg_type_get_all, msg_type_get_info, msg_type_get_one_file, msg_type_get_state, msg_type_playing, msg_type_set_time, msg_type_start_flush, msg_version, parse_v_mark, send_msg, send_to_content, set_on_msg;

  parse_v_mark = 'uuid=ec9680e6-da5e-4971-ac5f-25d971bf6366';

  msg_version = '0.1.0-1';

  msg_type_found = 'content_found';

  msg_type_playing = 'content_playing';

  msg_type_get_info = 'content_get_info';

  msg_type_check_support = 'content_check_support';

  msg_type_set_time = 'content_set_time';

  msg_type_get_state = 'popup_get_state';

  msg_type_start_flush = 'popup_start_flush';

  msg_type_flush_done = 'popup_flush_done';

  msg_type_get_all = 'dl_get_all';

  msg_type_get_one_file = 'dl_get_one_file';

  set_on_msg = function(callback) {
    return chrome.runtime.onMessage.addListener(function(msg, sender, send_res) {
      var e;
      try {
        if (!((msg.mark === parse_v_mark) && (msg.version === msg_version))) {
          return;
        }
      } catch (error) {
        e = error;
        return;
      }
      callback({
        mark: msg.mark,
        version: msg.version,
        type: msg.type,
        data: msg.data,
        sender: sender,
        callback: send_res
      });
      return true;
    });
  };

  send_msg = function(msg_type, data, callback) {
    var msg;
    msg = {
      mark: parse_v_mark,
      version: msg_version,
      type: msg_type,
      data: data
    };
    return chrome.runtime.sendMessage(null, msg, callback);
  };

  send_to_content = function(msg_type, data, callback, tab_id) {
    var msg;
    msg = {
      mark: parse_v_mark,
      version: msg_version,
      type: msg_type,
      data: data
    };
    return chrome.tabs.sendMessage(tab_id, msg, callback);
  };

  module.exports = {
    mark: parse_v_mark,
    version: msg_version,
    t: {
      found: msg_type_found,
      playing: msg_type_playing,
      get_info: msg_type_get_info,
      check_support: msg_type_check_support,
      set_time: msg_type_set_time,
      get_state: msg_type_get_state,
      start_flush: msg_type_start_flush,
      flush_done: msg_type_flush_done,
      get_all: msg_type_get_all,
      get_one_file: msg_type_get_one_file
    },
    on: set_on_msg,
    send: send_msg,
    send_to_content: send_to_content
  };

}).call(this);



},{}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.12.3
(function() {
  var draw_ui, get_current_state, get_current_tab_id, log, msg, popup_init, start_flush;

  log = require('./log');

  msg = require('./msg');

  get_current_tab_id = function() {
    return chrome.tabs.query({
      active: true,
      currentWindow: true
    }, function(result) {
      var tab_id;
      tab_id = result[0].id;
      return get_current_state(tab_id);
    });
  };

  get_current_state = function(tab_id) {
    log.d("current tab_id == " + tab_id + " ");
    return msg.send(msg.t.get_state, {
      tab_id: tab_id
    }, function(result) {
      return draw_ui(result, tab_id);
    });
  };

  draw_ui = function(info, tab_id) {
    var b, div, p;
    log.d("current state == " + (JSON.stringify(info)) + " ");
    $('#main_init_place_holder').remove();
    div = $('#popup_main_ui');
    b = $('<button type="button" >重新检测</button>');
    div.append(b);
    b.on('click', function() {
      msg.send_to_content(msg.t.check_support, null, null, tab_id);
      return log.d('popup: send check_support msg to content.js ');
    });
    if (info === null) {
      return div.append($('<p>错误: 不支持此页面 :-( </p>'));
    }
    div.append($('<h2>当前页面</h2>'));
    p = $('<p></p>');
    p.text("site: " + info.site);
    div.append(p);
    p = $('<p></p>');
    p.text("标题: " + info.title);
    div.append(p);
    p = $('<p></p>');
    p.text("URL: " + info.url);
    div.append(p);
    if (!info.playing) {
      div.append($('<hr />'));
      return div.append($('<p>请等待视频开始正常播放 .. . </p>'));
    } else {
      div.append($('<h2>视频信息</h2>'));
      p = $('<p></p>');
      p.text("视频标题: " + info.title_video + "_" + info.title_sub);
      div.append(p);
      p = $('<p></p>');
      p.text("清晰度: " + info.size);
      div.append(p);
      p = $('<p></p>');
      p.text("总时长: " + info.max_time_s + " 秒");
      div.append(p);
      b = $('<button type="button" >开始</button>');
      div.append(b);
      return b.on('click', function() {
        return start_flush(tab_id, div);
      });
    }
  };

  start_flush = function(tab_id, div) {
    msg.on(function(info) {
      var b;
      switch (info.type) {
        case msg.t.flush_done:
          div.append($('<hr /><p>获取分段文件, 结束. </p>'));
          b = $('<button type="button" >更多</button>');
          div.append(b);
          return b.on('click', function() {
            log.d('open (more) window ');
            return window.open('dl.html', '_blank');
          });
      }
    });
    return msg.send(msg.t.start_flush, {
      tab_id: tab_id
    });
  };

  popup_init = function() {
    log.d('popup.js: start init ');
    return get_current_tab_id();
  };

  popup_init();

}).call(this);



},{"./log":1,"./msg":2}]},{},[3])(3)
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
